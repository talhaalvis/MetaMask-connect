"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/connectorCards/MetaMaskCard.tsx":
/*!****************************************************!*\
  !*** ./components/connectorCards/MetaMaskCard.tsx ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MetaMaskCard; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Card__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Card */ \"./components/Card.tsx\");\n/* harmony import */ var _MetaMaskHook__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MetaMaskHook */ \"./components/connectorCards/MetaMaskHook.js\");\n// import { useEffect, useState } from 'react'\n// import { hooks, metaMask } from '../../connectors/metaMask'\n// import { Card } from '../Card'\n// const { useChainId, useAccounts, useIsActivating, useIsActive, useProvider, useENSNames } = hooks\n// export default function MetaMaskCard() {\n//   const chainId = useChainId()\n//   const accounts = useAccounts()\n//   const isActivating = useIsActivating()\n//   const isActive = useIsActive()\n//   const provider = useProvider()\n//   const ENSNames = useENSNames(provider)\n//   const [error, setError] = useState(undefined)\n//   // attempt to connect eagerly on mount\n//   useEffect(() => {\n//     void metaMask.connectEagerly().catch(() => {\n//       console.debug('Failed to connect eagerly to metamask')\n//     })\n//   }, [])\n//   return (\n//     <Card\n//       connector={metaMask}\n//       activeChainId={chainId}\n//       isActivating={isActivating}\n//       isActive={isActive}\n//       error={error}\n//       setError={setError}\n//       accounts={accounts}\n//       provider={provider}\n//       ENSNames={ENSNames}\n//     />\n//   )\n// }\n\nvar _s = $RefreshSig$();\n\n\nfunction MetaMaskCard() {\n    _s();\n    var ref = (0,_MetaMaskHook__WEBPACK_IMPORTED_MODULE_2__.useMetaMaskCard)(), connector = ref.connector, activeChainId = ref.activeChainId, isActivating = ref.isActivating, isActive = ref.isActive, error = ref.error, setError = ref.setError, accounts = ref.accounts, provider = ref.provider, ENSNames = ref.ENSNames;\n    console.log(activeChainId);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Card__WEBPACK_IMPORTED_MODULE_1__.Card, {\n        connector: connector,\n        activeChainId: activeChainId,\n        isActivating: isActivating,\n        isActive: isActive,\n        error: error,\n        setError: setError,\n        accounts: accounts,\n        provider: provider,\n        ENSNames: ENSNames\n    }, void 0, false, {\n        fileName: \"D:\\\\web3\\\\web3-react\\\\example\\\\components\\\\connectorCards\\\\MetaMaskCard.tsx\",\n        lineNumber: 60,\n        columnNumber: 5\n    }, this);\n}\n_s(MetaMaskCard, \"49j5NdFfHDKP0XXl1tc1J/9Jm64=\", false, function() {\n    return [\n        _MetaMaskHook__WEBPACK_IMPORTED_MODULE_2__.useMetaMaskCard\n    ];\n});\n_c = MetaMaskCard;\nvar _c;\n$RefreshReg$(_c, \"MetaMaskCard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2Nvbm5lY3RvckNhcmRzL01ldGFNYXNrQ2FyZC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSw4Q0FBOEM7QUFFOUMsOERBQThEO0FBQzlELGlDQUFpQztBQUVqQyxvR0FBb0c7QUFFcEcsMkNBQTJDO0FBQzNDLGlDQUFpQztBQUNqQyxtQ0FBbUM7QUFDbkMsMkNBQTJDO0FBRTNDLG1DQUFtQztBQUVuQyxtQ0FBbUM7QUFDbkMsMkNBQTJDO0FBRTNDLGtEQUFrRDtBQUVsRCwyQ0FBMkM7QUFDM0Msc0JBQXNCO0FBQ3RCLG1EQUFtRDtBQUNuRCwrREFBK0Q7QUFDL0QsU0FBUztBQUNULFdBQVc7QUFFWCxhQUFhO0FBQ2IsWUFBWTtBQUNaLDZCQUE2QjtBQUM3QixnQ0FBZ0M7QUFDaEMsb0NBQW9DO0FBQ3BDLDRCQUE0QjtBQUM1QixzQkFBc0I7QUFDdEIsNEJBQTRCO0FBQzVCLDRCQUE0QjtBQUM1Qiw0QkFBNEI7QUFDNUIsNEJBQTRCO0FBQzVCLFNBQVM7QUFDVCxNQUFNO0FBQ04sSUFBSTtBQUdKOztBQUE4QjtBQUNrQjtBQUVqQyxTQUFTRSxZQUFZLEdBQUc7O0lBQ3JDLElBVUlELEdBQWlCLEdBQWpCQSw4REFBZSxFQUFFLEVBVG5CRSxTQUFTLEdBU1BGLEdBQWlCLENBVG5CRSxTQUFTLEVBQ1RDLGFBQWEsR0FRWEgsR0FBaUIsQ0FSbkJHLGFBQWEsRUFDYkMsWUFBWSxHQU9WSixHQUFpQixDQVBuQkksWUFBWSxFQUNaQyxRQUFRLEdBTU5MLEdBQWlCLENBTm5CSyxRQUFRLEVBQ1JDLEtBQUssR0FLSE4sR0FBaUIsQ0FMbkJNLEtBQUssRUFDTEMsUUFBUSxHQUlOUCxHQUFpQixDQUpuQk8sUUFBUSxFQUNSQyxRQUFRLEdBR05SLEdBQWlCLENBSG5CUSxRQUFRLEVBQ1JDLFFBQVEsR0FFTlQsR0FBaUIsQ0FGbkJTLFFBQVEsRUFDUkMsUUFBUSxHQUNOVixHQUFpQixDQURuQlUsUUFBUTtJQUVaQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ1QsYUFBYSxDQUFDO0lBQ3hCLHFCQUNFLDhEQUFDSix1Q0FBSTtRQUNIRyxTQUFTLEVBQUVBLFNBQVM7UUFDcEJDLGFBQWEsRUFBRUEsYUFBYTtRQUM1QkMsWUFBWSxFQUFFQSxZQUFZO1FBQzFCQyxRQUFRLEVBQUVBLFFBQVE7UUFDbEJDLEtBQUssRUFBRUEsS0FBSztRQUNaQyxRQUFRLEVBQUVBLFFBQVE7UUFDbEJDLFFBQVEsRUFBRUEsUUFBUTtRQUNsQkMsUUFBUSxFQUFFQSxRQUFRO1FBQ2xCQyxRQUFRLEVBQUVBLFFBQVE7Ozs7O1lBQ2xCLENBQ0g7QUFDSCxDQUFDO0dBMUJ1QlQsWUFBWTs7UUFXOUJELDBEQUFlOzs7QUFYR0MsS0FBQUEsWUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL2Nvbm5lY3RvckNhcmRzL01ldGFNYXNrQ2FyZC50c3g/YjVkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXHJcblxyXG4vLyBpbXBvcnQgeyBob29rcywgbWV0YU1hc2sgfSBmcm9tICcuLi8uLi9jb25uZWN0b3JzL21ldGFNYXNrJ1xyXG4vLyBpbXBvcnQgeyBDYXJkIH0gZnJvbSAnLi4vQ2FyZCdcclxuXHJcbi8vIGNvbnN0IHsgdXNlQ2hhaW5JZCwgdXNlQWNjb3VudHMsIHVzZUlzQWN0aXZhdGluZywgdXNlSXNBY3RpdmUsIHVzZVByb3ZpZGVyLCB1c2VFTlNOYW1lcyB9ID0gaG9va3NcclxuXHJcbi8vIGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1ldGFNYXNrQ2FyZCgpIHtcclxuLy8gICBjb25zdCBjaGFpbklkID0gdXNlQ2hhaW5JZCgpXHJcbi8vICAgY29uc3QgYWNjb3VudHMgPSB1c2VBY2NvdW50cygpXHJcbi8vICAgY29uc3QgaXNBY3RpdmF0aW5nID0gdXNlSXNBY3RpdmF0aW5nKClcclxuXHJcbi8vICAgY29uc3QgaXNBY3RpdmUgPSB1c2VJc0FjdGl2ZSgpXHJcblxyXG4vLyAgIGNvbnN0IHByb3ZpZGVyID0gdXNlUHJvdmlkZXIoKVxyXG4vLyAgIGNvbnN0IEVOU05hbWVzID0gdXNlRU5TTmFtZXMocHJvdmlkZXIpXHJcblxyXG4vLyAgIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGUodW5kZWZpbmVkKVxyXG5cclxuLy8gICAvLyBhdHRlbXB0IHRvIGNvbm5lY3QgZWFnZXJseSBvbiBtb3VudFxyXG4vLyAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbi8vICAgICB2b2lkIG1ldGFNYXNrLmNvbm5lY3RFYWdlcmx5KCkuY2F0Y2goKCkgPT4ge1xyXG4vLyAgICAgICBjb25zb2xlLmRlYnVnKCdGYWlsZWQgdG8gY29ubmVjdCBlYWdlcmx5IHRvIG1ldGFtYXNrJylcclxuLy8gICAgIH0pXHJcbi8vICAgfSwgW10pXHJcblxyXG4vLyAgIHJldHVybiAoXHJcbi8vICAgICA8Q2FyZFxyXG4vLyAgICAgICBjb25uZWN0b3I9e21ldGFNYXNrfVxyXG4vLyAgICAgICBhY3RpdmVDaGFpbklkPXtjaGFpbklkfVxyXG4vLyAgICAgICBpc0FjdGl2YXRpbmc9e2lzQWN0aXZhdGluZ31cclxuLy8gICAgICAgaXNBY3RpdmU9e2lzQWN0aXZlfVxyXG4vLyAgICAgICBlcnJvcj17ZXJyb3J9XHJcbi8vICAgICAgIHNldEVycm9yPXtzZXRFcnJvcn1cclxuLy8gICAgICAgYWNjb3VudHM9e2FjY291bnRzfVxyXG4vLyAgICAgICBwcm92aWRlcj17cHJvdmlkZXJ9XHJcbi8vICAgICAgIEVOU05hbWVzPXtFTlNOYW1lc31cclxuLy8gICAgIC8+XHJcbi8vICAgKVxyXG4vLyB9XHJcblxyXG5cclxuaW1wb3J0IHsgQ2FyZCB9IGZyb20gJy4uL0NhcmQnXHJcbmltcG9ydCB7IHVzZU1ldGFNYXNrQ2FyZCB9IGZyb20gJy4vTWV0YU1hc2tIb29rJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTWV0YU1hc2tDYXJkKCkge1xyXG4gIGNvbnN0IHtcclxuICAgIGNvbm5lY3RvcixcclxuICAgIGFjdGl2ZUNoYWluSWQsXHJcbiAgICBpc0FjdGl2YXRpbmcsXHJcbiAgICBpc0FjdGl2ZSxcclxuICAgIGVycm9yLFxyXG4gICAgc2V0RXJyb3IsXHJcbiAgICBhY2NvdW50cyxcclxuICAgIHByb3ZpZGVyLFxyXG4gICAgRU5TTmFtZXNcclxuICB9ID0gdXNlTWV0YU1hc2tDYXJkKClcclxuY29uc29sZS5sb2coYWN0aXZlQ2hhaW5JZClcclxuICByZXR1cm4gKFxyXG4gICAgPENhcmRcclxuICAgICAgY29ubmVjdG9yPXtjb25uZWN0b3J9XHJcbiAgICAgIGFjdGl2ZUNoYWluSWQ9e2FjdGl2ZUNoYWluSWR9XHJcbiAgICAgIGlzQWN0aXZhdGluZz17aXNBY3RpdmF0aW5nfVxyXG4gICAgICBpc0FjdGl2ZT17aXNBY3RpdmV9XHJcbiAgICAgIGVycm9yPXtlcnJvcn1cclxuICAgICAgc2V0RXJyb3I9e3NldEVycm9yfVxyXG4gICAgICBhY2NvdW50cz17YWNjb3VudHN9XHJcbiAgICAgIHByb3ZpZGVyPXtwcm92aWRlcn1cclxuICAgICAgRU5TTmFtZXM9e0VOU05hbWVzfVxyXG4gICAgLz5cclxuICApXHJcbn0iXSwibmFtZXMiOlsiQ2FyZCIsInVzZU1ldGFNYXNrQ2FyZCIsIk1ldGFNYXNrQ2FyZCIsImNvbm5lY3RvciIsImFjdGl2ZUNoYWluSWQiLCJpc0FjdGl2YXRpbmciLCJpc0FjdGl2ZSIsImVycm9yIiwic2V0RXJyb3IiLCJhY2NvdW50cyIsInByb3ZpZGVyIiwiRU5TTmFtZXMiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/connectorCards/MetaMaskCard.tsx\n"));

/***/ })

});